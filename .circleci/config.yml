version: 2.1

# Add additional CircleCI Orbs dependencies
orbs:
  # https://circleci.com/orbs/registry/orb/circleci/kubernetes
  kubernetes: circleci/kubernetes@0.10.1
  # Pins Helm to v2.x
  # TODO: Consider upgrading Helm to v3.0 (https://github.com/StackStorm/stackstorm-ha/issues/98)
  # https://circleci.com/orbs/registry/orb/circleci/helm
  helm: circleci/helm@0.2.0
  # https://circleci.com/orbs/registry/orb/ccpgames/minikube
  minikube: ccpgames/minikube@0.0.1

jobs:
  # Run Helm Lint checks
  helm-lint:
    working_directory: ~/stackstorm-ha
    docker:
      # Pin Helm to v2.x, see https://github.com/StackStorm/stackstorm-ha/issues/98
      - image: lachlanevenson/k8s-helm:v3.0.0
    steps:
      - checkout
      - run:
          name: Prepare Helm
          command: |
            set -x
            helm init --client-only
            helm dependency update
      - run:
          name: Helm Lint Check (Community)
          command: helm lint
      - run:
          name: Helm Lint Check (Enterprise)
          command: helm lint --set enterprise.enabled=true --set enterprise.license=123asd456fake
      - run:
          name: Helm template
          command: |
            mkdir -p enterprise community
            helm template --output-dir community .
            helm template --output-dir enterprise --set enterprise.enabled=true --set enterprise.license=123asd456fake .
      - persist_to_workspace:
          root: ~/stackstorm-ha/
          paths:
            - community
            - enterprise
            # TODO: Fill an issue in https://github.com/garethr/kubeval
            # 'charts' contains 3rd party templates which doesn't validate against schema due to minor 'object != null' API validation issues
            # See: https://circleci.com/gh/StackStorm/stackstorm-enterprise-ha/18
            #- charts

  # Run Kubernetes lint checks
  k8s-lint:
    docker:
      - image: garethr/kubeval
    steps:
      - attach_workspace:
          at: .
      - run:
          name: K8s Kubeval Lint Check (Community)
          command: kubeval $(find . -type f)
          working_directory: community/stackstorm-ha/templates/
      - run:
          name: K8s Kubeval Lint Check (Enterprise)
          command: kubeval $(find . -type f)
          working_directory: enterprise/stackstorm-ha/templates/

  # Spin up minikube K8s cluster and run Helm chart & e2e tests on it
  helm-e2e:
    machine:
      # Available images https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - kubernetes/install
      - minikube/minikube-install:
          # https://github.com/kubernetes/minikube/releases
          version: v1.5.2
      - run:
          name: Create new K8s cluster
          command: sudo -E minikube start --vm-driver=none --cpus $(nproc) --memory 4096
          environment:
            CHANGE_MINIKUBE_NONE_USER: true
      - helm/install-helm-on-cluster
      - run:
          name: Update stackstorm-ha chart dependencies
          command: helm dependency update
      - run:
          name: Helm install stackstorm-ha chart (Community)
          command: helm install --timeout 600 --debug --wait --name stackstorm-ha .
      - run:
          name: Helm test (Community)
          command: helm test stackstorm-ha --parallel --cleanup
      - run:
          when: always
          name: Show created K8s resources (Community)
          command: kubectl get all
      - run:
          name: Helm upgrade stackstorm-ha (Community -> Enterprise)
          command: helm upgrade --wait stackstorm-ha . --set enterprise.enabled=true --set enterprise.license=${EWC_LICENSE}
      - run:
          name: Helm test (Enterprise)
          command: helm test stackstorm-ha --parallel
      - run:
          when: always
          name: Show created K8s resources (Enterprise)
          command: kubectl get all

workflows:
  version: 2
  helm:
    jobs:
      - helm-lint
      - k8s-lint:
          requires:
            - helm-lint
      - helm-e2e:
          requires:
            - helm-lint
            - k8s-lint
  # Run periodic nightly Helm tests to ensure there are no regressions
  helm-nightly:
    jobs:
      - helm-lint
      - k8s-lint:
          requires:
            - helm-lint
      - helm-e2e:
          requires:
            - helm-lint
            - k8s-lint
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master

experimental:
  notify:
    branches:
      only:
        - master
